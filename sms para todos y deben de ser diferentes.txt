

	const dispatch = useDispatch();
	const login = useSelector(({ auth }) => auth.login);

	const [isFormValid, setIsFormValid] = useState(false);
	const [showPassword, setShowPassword] = useState(false);

	const formRef = useRef(null);

	useEffect(() => {
		if (login.error && (login.error.email || login.error.password)) {
			formRef.current.updateInputsWithError({
				...login.error
			});
			disableButton();
		}
	}, [login.error]);

	function disableButton() {
		setIsFormValid(false);
	}

	function enableButton() {
		setIsFormValid(true);
	}

	function handleSubmit(model) {
		dispatch(authActions.submitLogin(model));
	}



export RAILS_MASTER_KEY=bb5ffbd20b7fb60b4f05932fb2189277
```
4. Run the server in one tab:
```
rails s
```

5. Run sidekiq in a separate tab
```
export RAILS_MASTER_KEY=bb5ffbd20b7fb60b4f05932fb2189277
bundle exec sidekiq



    let(:user_params) do
      {
        email: 'p@elh.mx',
        password: 'password1',
        name: 'Heriberto Perez'
      }
    end
    let(:valid_user) { User.persist_values(user_params) }
    let!(:valid_token) do
      JwtTokenService.encode_token(
        { user_id: valid_user.id },
        valid_user.jwt_salt
      )
    end


          headers = {
            'Authorization-Token' => "Bearer #{valid_token}",
            'Authorization-Client' => valid_user.jwt_salt
          }
          request.headers.merge! headers


Authorization-Token
Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE1OTIyNTc1MjR9.al20eEdRLLwc5sa6MNKqzEect83WEaKup2ZemZgjI1M

Authorization-Client
$2a$12$kiPae4cU.r8AJuyQrY26qe



this.isAuthTokenValid(authorizationTokens.authorizationClient)



import history from '@history';


		history.push({
			pathname: '/'

	});



export const BASE_PATH = "/app";
export const API_BASE_PATH="/api/v1/";

import { BASE_PATH, API_BASE_PATH } from "./config";

export const apiUrl = (path) => {
  return `${process.env.API_URL}${API_BASE_PATH}${path}`;
}

export const routeFor = (path, isPublic=false) => {
  if (!path) {
    const url = isPublic ? "/public" : BASE_PATH;
    return url;
  }
  return `${isPublic ? "/public" : BASE_PATH}/${path}`;
}


REACT_APP_API_URL=http://localhost:3000





Name smsforall.org
TTL 3600 seconds
Type NETLIFY
Value smsforall.netlify.app


same for www.smsforall.org

smsparatodos.netlify.app


src/app/store/actions/fuse/message.actions.j

src/app/auth/store/actions/login.actions.js





Twilio es una plataforma de comunicaciones en la nube que proporciona a los desarrolladores de software bloques de construcción para agregar comunicaciones a aplicaciones web y móviles o administrar aplicaciones de correo electrónico (como a través de nuestros productos y servicios SendGrid).

Entendemos que cuando utiliza la plataforma Twilio, confía en nosotros para que manejemos sus datos de manera adecuada, incluida su información personal y la de sus usuarios finales. Es por eso que adoptamos un enfoque de "No travesuras" para la protección de datos.

Parte de nuestro enfoque "Sin travesuras" es asegurarnos de que usted, el desarrollador, tenga información sobre cómo procesamos la información personal en relación con su uso de nuestros productos y servicios, incluido nuestro sitio web. Queremos permitirle tomar decisiones informadas sobre su información personal cuando cree sus aplicaciones de software en la plataforma Twilio. También queremos brindarle información relevante para ayudar a sus usuarios finales a tomar decisiones informadas sobre su información personal cuando usan sus aplicaciones de software creadas en la plataforma de Twilio.

Somos realistas aquí. Y, por mucho que nuestro equipo de privacidad lo desee, sabemos que la mayoría de los desarrolladores no pasan su tiempo leyendo avisos de privacidad ...
¡Pero sí leen documentos de API! Por lo tanto, hemos agregado información a nuestros documentos de la API Twilio y a la documentación de SendGrid sobre el procesamiento de información personal para brindarle información que lo ayude a construir de una manera más inteligente y más consciente de la privacidad.
Entonces, digamos que ha leído todo aquí y ha revisado nuestros documentos API específicos del producto, pero aún tiene más preguntas o inquietudes sobre cómo procesamos la información personal, o si desea saber más sobre cómo ejercer sus derechos Puede contactar a nuestro Equipo de Privacidad en la Oficina del Oficial de Protección de Datos enviándonos un correo electrónico a privacy@twilio.com o escribiéndonos a:


color azul logo numero decimal
#499DD6


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Debido a cortes de luz en las carreteras, tu pedido

Se estimate que el envio DHL 3719221109 llega el lun may 25, gestion a la entrega en la pagina del.dhl.com/MXh748jkd94

Su codigo de verificación es xxxxxx

smsparatodos.com a detectado un acceso nuevo en su dispositivo

Hola Juan, tu cita fue agendada correctamente para el dia Viernes 23 de julio a las 9 am

Su numero de guia DHL es se encuentra saliendo de la ciudad de Beijing

COOPEL: Le recuerda que la fecha limite de pago de tu TDC 0294 esta cerca 2020-06-24, el pago minimo es de $1,097.78,si ya re


Deposito Tarjeta M.N. 343 monto $2438.52 el 15/06/20 02:25 PM. En operaciones con cheque valida tu saldo antes de realizar cualq

More marketing easy to do
https://gist.github.com/heridev/322eb464854b92059ad1bfcb70b5cb7e#the-history-behind-smsparatodoscom-or-smsforallog

20.times do
  ['+523121428022', '+523121698456'].each do |phone_number|
    message_content = "Where my intention flows so energy and love follow"
    service = OnDemandSmsSenderService.new(devise_firebase_token, phone_number, message_content)
    puts service.send_now!
  end
end



Imagen de SMS caros en latinoamerica


Al igual que muchos emprendedores, nos vimos en la necesidad de implementar el envío de mensajes de textos (SMS) para nuestro negocio, incluyendo: envío de confirmaciones de citas, recordatorios, confirmación de registro por medio de un token de un solo uso, entre otros.

Pero después de revisar nuestras opciones, no pudimos encontrar un plan gratuito o una opción de envío de SMS asequibles, ya que la gran mayoría de precios por mensaje ronda entre los 0.26 - $0.90, siendo uno de los mas caro una de las plataformas mas populares para desarrolladores (Twilio, Amazon, sms masivos, etc.)

Fui allí cuando después de analizarlo minuciosamente, nos dimos cuenta que muchos de los proveedores de telefonía actuales ofrecen como parte de sus recargas o planes el uso de mensajes SMS ilimitados, y siendo que nuestros mensajes son personales (clientes nuestros), eso significa que como usuarios MoviStar, Telcel, A&T, etc., podemos enviar recordatorios de forma manual y tantos como necesitemos, pero, ¿Para que hacerlo manualmente? cuando podemos automatizar dichas tareas!!!

Es allí donde nace smsparatodos.com, y empresas pequeñas de esta forma puede comenzar a utilizar el servicio de forma gratuita, con un envío de mensajes limitado de 50 mensajes de texto (SMS) por hora y con un máximo de 2,000 por mes en el plan gratuito. En caso de que necesitar enviar una mayor cantidad de mensajes de texto, es necesario contar con un plan de pago y seguir nuestras instrucciones de configuración.

De esta forma las pequeñas empresas pueden comenzar al instante y utilizar nuestra API para realizar integraciones personalizadas, solo es necesario contar con un dispositivo Android encendido y con conexión a Internet todo el tiempo, y que cuente un con un plan de SMS válido, así como instalar nuestra aplicación Android y registrar una cuenta en nuestra pagina Web.

Parece muy bueno? pues lo es, esperamos que les sea de utilidad, y esperamos que puedas sacarle provecho a construir tu marca y la confianza con tus clientes utilizando mensajes de texto gratis.


            <div className="col-lg-5">
              <div className="banner-product-image text-right">
                <img className="image-1" src="/assets/images/app/smsparatodos_main_banner.svg" alt="App Landing"/>
                <img className="image-2" src="/assets/images/app/banner-mobile-2.png" alt="App Landing"/>
                <img className="image-3" src="/assets/images/app/banner-mobile-3.png" alt="App Landing"/>
              </div>
            </div>

para el container que le quito el h-100
padding-top: 227px;

pt-4

 are.slide
height: 1266px;


con sus startups, nos encontramos con la necesidad necesitabamos implementar



Existe una gran cantidad de usos que les puedes dar a los mensajes de texto para ayudarte a crecer tu micro, pequeña o grande empresa.
Las ideas de uso son infinitas. Conecta con tus clientes ahora.



Acceso a nuestro panel Web
Puedes revisar en cualquier momento el estado de tus mensajes de texto de forma individual, también tendrás acceso a un panel desde nuestra aplicación Web en la cual podrás gestionar diferentes catálogos de información.

Seguridad
En smsparatodos.com seguimos lo mas alto estándares de seguridad, con lo cual nuestro software siempre se encuentra utilizando las versiones mas recientes y seguras, además de ello nuestra plataforma se encuentra hospedada en uno de los servicios de hosting mas seguros - Heroku.com

Mensajes no deseados
smsparatodos.com entre muchos de sus objetivos, está particularmente interesado en ofrecer una gran experiencia al usuario que recibe mensajes a través del uso de nuestra plataforma, por ello estamos muy interesados en mantener a dichos usuarios libres de mensajes no deseados, esto lo logramos por medio del uso de software e Inteligencia Artificial, nuestros Robots se encuentran revisando de forma automatizada para evitar el envío de mensajes no deseados, para mas detalles sobre nuestras políticas de uso correcto, favor de visitar la siguiente liga.

Uso indefinido de forma gratuita
smsparatodos.com desde el día 1, nace con el fin de ofrecer servicios de SMS asequibles y gratuitos de acuerdo a nuestras capacidades y recursos disponibles.





Colima, MX

Plaza San Miguel 11-20
Av. Constitución #2035
Santa Gertrudis



        <a id="whatswidget-phone-desktop"
           target="_blank"
           href="https://web.whatsapp.com/send?phone=523121231517"
           class="whatswidget-cta whatswidget-cta-desktop">
          Enviar Mensaje</a>
        <a id="whatswidget-phone-mobile"
           target="_blank"
           href="https://wa.me/523121231517"
           class="whatswidget-cta whatswidget-cta-mobile">
          Enviar Mensaje
        </a>


centavos
0.10

0 - 12,000


http://localhost:3002/terminos-y-condiciones-de-uso



export RAILS_MASTER_KEY=bb5ffbd20b7fb60b4f05932fb2189277
rails console
devise_firebase_token = "eYzo1P8EQlSRJ3U6Y76OSR:APA91bHs0a9msnJFbh5uD1W1d2AZ1TZJ3GRPtIw4Ou0pxIAgdJ1BkyKjwqOA5j_Jv8sJEqnV_cqu_MGlvKI3g5r7zr815hQERAFmcJXRSCEfigH9ugSFDE8lXaoJJu3zTiDmLeKjxNS5"
phone_recipient_number = "+48797964633"

message_content = "Hola juan te confirmamos que tu cita fue agendada correctamente para el dia..."

service = OnDemandSmsSenderService.new(devise_firebase_token, phone_recipient_number, message_content)
service.send_now!

## many times the same
29.times do
  service.send_now!
end

class OnDemandSmsSenderService
  def initialize(devise_firebase_token, phone_recipient_number, message_content)
   @devise_firebase_token = devise_firebase_token;
   @phone_recipient_number = phone_recipient_number
   @message_content = take_only_128_characters_from(message_content)
  end

  def take_only_128_characters_from(message_content)
    if message_content.present?
      message_content[0..127]
    else
      ''
    end
  end

  # This one does not confirm the sms notification as received
  # But that would be a different feature.
  def send_now!
    options = {
      "data": {
        "sms_number": @phone_recipient_number,
        "sms_content": @message_content
      }
    }
    response = fcm_service.send([@devise_firebase_token], options)
    body_response = JSON.parse(response[:body], symbolize_names: true)
    puts body_response
  end

  private
  def fcm_service
    @fcm_service ||= begin
    FCM.new(
        Rails.application.credentials[:fcm_server_key],
        timeout: ENV['FCM_SERVICE_TIMEOUT'] || 3
        )
    end
  end
end




api.smsparatodos.com

3600

glacial-whitefish-i51xd3r5sy973q4ptihwusku.herokudns.com



react-app-smsparatodos.netlify.app



Anuncio de Adsense

https://smsparatodos.com

Utiliza el poder del SMS
Gestiona tus recordatorios
comunicación y más

Transforma tu celular en un sistema de envío de mensajes grátis
Y obtén mas clientes gestionándolo todo desde internet




import React from 'react';
import TextField from '@material-ui/core/TextField';
import Autocomplete from '@material-ui/lab/Autocomplete';

    <Autocomplete
      id="combo-box-demo"
      options={top100Films}
      getOptionLabel={(option) => option.title}
      style={{ width: 300 }}
      renderInput={(params) => <TextField {...params} label="Combo box" variant="outlined" />}
    />

+523121231517
+591????????


(?:[0-9] ?){6,11}[0-9]$

[0-9]{6,11}


^\([0-9]){6,11}

var cadena = "hello world!";
var result = /^hello/.test(cadena);
console.log(result);



  wrapper: {
    margin: theme.spacing(1),
    position: 'relative',
  },
  buttonProgress: {
    position: 'absolute',
    top: '40%',
    left: '35%'
  },



import axios from 'axios';

 componentDidMount() {
    axios.get(`https://jsonplaceholder.typicode.com/users`)
      .then(res => {
        const persons = res.data;
        this.setState({ persons });
      })
  }

  render() {
    return (
      <ul>
        { this.state.persons.map(person => <li>{person.name}</li>)}
      </ul>
    )
  }



I like this one

declaring the file:
```
import axios from 'axios';

export default axios.create({
  baseURL: `http://jsonplaceholder.typicode.com/`
});
```


Using it
```
import API from '../api';

export default class PersonList extends React.Component {
  handleSubmit = event => {
    event.preventDefault();

    API.delete(`users/${this.state.id}`)
      .then(res => {
        console.log(res);
        console.log(res.data);
      })
  }
}
```


### Development accounts
```
joseheribertoperezmagana@gmail.com/123qwe123/3121231517
```



https://drive.google.com/file/d/1R38C-IIfs83BSBXaDltepumwFz8Nk5R_/view?usp=sharing






MAX_DISPLAYED_LOG



1,000



{
  "device_token_code"=>"gLhiAA",
"firebase_token"=>"eYzo1P8EQlSRJ3U6Y76OSR:APA91bHs0a9msnJFbh5uD1W1d2AZ1TZJ3GRPtIw4Ou0pxIAgdJ1BkyKjwqOA5j_Jv8sJEqnV_cqu_MGlvKI3g5r7zr815hQERAFmcJXRSCEfigH9ugSFDE8lXaoJJu3zTiDmLeKjxNS5", "_aj_hash_with_indifferent_access"=>true}



Hi Viola,

I just want to know what is the current status of our orders, can you share that with us? :)

Heriberto


0420109L202228028229


### Credentials on production (app.smsparatodos.com)
```
joseheribertoperezmagana@gmail.com/$m$paratodo$1766
```



Para la parte de plataformas estamos pensando en utilizar mi cuenta personal para la venta e irnos por la venta de menos de $300 mil y en caso de que supere ese monto, ya podemos hablar para que
Vas a dar de alta mi cuenta y en ella sera para venta en plataformas (todo lo que quiera)
- papeleria
- limpieza
- y lo que se deje

en cuanto pase la contabilidad pues ya se da de alta la cuenta por fuera.

jarras y empaques - RIF


(10%) COMERCIO AL POR MENOR DE CRISTALERIA Y SUS PIEZAS SUELTAS, LOZA Y UTENSILIOS DE COCINA DE CERAMICA Y PLASTICO (RIF)

(50%) COMERCIO AL POR MENOR DE ARTICULOS DE PAPELERIA (RIF)

(20%) COMERCIO AL POR MENOR DE ARTICULOS PARA LIMPIEZA (RIF)

(20%) - PROCESAMIENTO ELECTRONICO DE INFORMACION, HOSPEDAJE DE PAGINAS WEB Y OTROS SERVICIOS RELACIONADOS (RIF)

country_international_code
mobile_number

hola Dania

        it 'creates a new sms notification' do
          process :create, method: :post, params: sms_notification_params
          expect(response.status).to eq 200
          keys = response_body[:data][:attributes].keys
          expect(keys).to include(:sms_content)


  { name: 'my personal number', number: '+523121231517', f_token: 'eYzo1P8EQlSRJ3U6Y76OSR:APA91bHs0a9msnJFbh5uD1W1d2AZ1TZJ3GRPtIw4Ou0pxIAgdJ1BkyKjwqOA5j_Jv8sJEqnV_cqu_MGlvKI3g5r7zr815hQERAFmcJXRSCEfigH9ugSFDE8lXaoJJu3zTiDmLeKjxNS5' },

Twitter1766$$


  const [values, setValues] = React.useState({
    name: "Hello"
  });

     const CHARACTER_LIMIT = 160;


              helperText={showValidationErrorMessage('sms_content')}
              helperText={`${values.name.length}/${CHARACTER_LIMIT}`}


Nuevo device xiaomi red mi con el numero 3121231639 (movistar)
```
redmi_token = 'f1UFkTNtSuOYIxSweGU4P6:APA91bFA8T6gx856AwMeH9c58NKeX4BtcG_h6Rxk2WoESJAWpusBs93uzlE2x4NX-kLReoKPguu_UWaaLni1LZ7Ht2obfmFunERudH9TU7rEEge2ziPd6EyzAdifZoV-6OHJn7CZleX3'
```

Nuevo device teclast 3121698456 (telcel)
```
teclast_token = 'e8Wl5y16RDGyQ1W-0QslV4:APA91bH6aShfnYvCJEsgRgwX8HfMNsn2UO9DKP7P9tEF2N_Fj7e2xlq0LvREbdXkZjddauOz0bbDcaglf66P4TGCJLsOQkno6dZeWkxWLKtunBbmkASo9y2dsQ-kA0uGcRF_jrHCoJ03'
```

sending a bunch of those messages again.

```
params = {
  sms_content: 'Hola joven',
  sms_number: '+523121231639',
  assigned_to_mobile_hub_id: SmsMobileHub.last.id,
  user_id: User.last.id,
  sms_type: 'transactional'
}
sms_notification = SmsNotification.create params

# sms_notification = SmsNotification.last

firebase_params = {
  sms_number: sms_notification.sms_number,
  sms_notification_id: sms_notification.id,
  device_token_firebase: teclast_token,
  # device_token_firebase: 'eYzo1P8EQlSRJ3U6Y76OSR:APA91bHs0a9msnJFbh5uD1W1d2AZ1TZJ3GRPtIw4Ou0pxIAgdJ1BkyKjwqOA5j_Jv8sJEqnV_cqu_MGlvKI3g5r7zr815hQERAFmcJXRSCEfigH9ugSFDE8lXaoJJu3zTiDmLeKjxNS5',
  sms_content: sms_notification.sms_content,
  sms_type: sms_notification.sms_type
}

s = FirebaseMessagingService.new(firebase_params)
s.send_to_google!
```

Aqui el contenido mas actualizado
```
https://gist.github.com/heridev/7b21aaac071f771145e293fc67ce9dde
```

Empieza la cosa interesante jaja


first_paragraph = "primera prueba"


first_paragraph = 'Desde luego, «los pensamientos son cosas», cosas muy poderosas cuando se combinan con la exactitud del propósito, la perseverancia y un imperioso deseo de convertirlos en riqueza, o en otros objetos materiales. Hace algunos años, Edwin C. Barnes descubrió lo cierto que es que los hombres realmente piensan y se hacen ricos. Su descubrimiento no surgió de pronto, sino que fue apareciendo poco a poco, empezando por un ferviente deseo de llegar a ser socio del gran Edison. Una de las características principales del deseo de Barnes es que tenía total determinación. Quería trabajar con Edison, no para él. Observe con detenimiento la descripción de cómo fue convirtiendo su deseo en realidad, y tendrá una mejor comprensión de los principios que conducen a la riqueza. Cuando apareció por primera vez en su mente, Barnes no estaba FIN'

phones = [
    { name: 'xiaomi blanco rosa', number: '+523121231639', f_token: 'f1UFkTNtSuOYIxSweGU4P6:APA91bFA8T6gx856AwMeH9c58NKeX4BtcG_h6Rxk2WoESJAWpusBs93uzlE2x4NX-kLReoKPguu_UWaaLni1LZ7Ht2obfmFunERudH9TU7rEEge2ziPd6EyzAdifZoV-6OHJn7CZleX3' },
  { name: 'teclast', number: '+523121698456', f_token: 'e8Wl5y16RDGyQ1W-0QslV4:APA91bH6aShfnYvCJEsgRgwX8HfMNsn2UO9DKP7P9tEF2N_Fj7e2xlq0LvREbdXkZjddauOz0bbDcaglf66P4TGCJLsOQkno6dZeWkxWLKtunBbmkASo9y2dsQ-kA0uGcRF_jrHCoJ03' }
]

[phones[1]].each do |mobile_hash|
  phones.each do |internal_mobile|
    next unless internal_mobile[:name] != mobile_hash[:name]

    first_paragraph.split.each do |current_word|
      send_message(current_word, internal_mobile[:number], mobile_hash[:f_token])
    end
  end
end




https://www.twilio.com/console/project/settings

working example:
```
curl -X POST \
  http://localhost:3000/v2/sms/create \
  -H "Content-Type: application/json" \
  -H 'Authorization-Token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxM30.1KX29F-3h6gJYsnntAQH08NWlEAD91utxoMh8J_sfaw' \
  -H 'Authorization-Client: $2a$12$ZL6.AGqVM7QWZa80Olm/m.' \
  -d '{"sms_number":"+523121231517","sms_content":"smsparatodos.com es increible","sms_type":"standard_delivery","sms_customer_reference_id":"123456789","mobile_hub_id":"6d5be464-5f7d-4bfe-8592-90c7242c70d7"}'
```

### Developing new API v2 for developers integrations

The smsparatodos.com API allows you to manage your text messages(SMS) using any programming languages and we include a few examples for:
- PHP
- JAVA
- C#
- C
- Python
- Ruby
- Javascript
- NodeJS


Authorization Keys

smsparatodos.com expects two authorization keys to be included in all API requests to the server as a headers the for POST requests.
Get Your Authorization keys from the API credentials section which you need to add in each API request as following:

HEADERS
```
Authorization-Token: YOUR_AUTHORIZATION_TOKEN
Authorization-Client: YOUR_AUTHORIZATION_CLIENT
```

NOTE: You must replace YOUR_AUTHORIZATION_TOKEN and YOUR_AUTHORIZATION_CLIENT with your account API Authorization keys which look like this:
```
YOUR_AUTHORIZATION_TOKEN = "Bearer eyJhbGciOiJIUzI1NiJ8.eyJ1c3VyX2lkIjoxM30.1KX29F-3h6gJYsnntAQH08NWlEAD91utxoMh7J_9jdu"
YOUR_AUTHORIZATION_CLIENT = "$2a$13$BL6.AGtVM7QWZa80O9m/m."
```

POST request to create a new SMS
```
https://api.smsparatodos.com/v2/sms/create
```

  const authorizationToken = userData.api_authorization_token;
  const authorizationClient = userData.api_authorization_client;


#### Body params
```
{
  mobile_hub_id: 'xxxxx-xxxxxx-xxxxxx-xxxxxx',
  sms_number: '+523121231517',
  sms_type: 'standard_delivery', # o urgent_delivery
  sms_content: 'Hola Juan, estamos muy contentos de informarte que tu orden a sido enviada por DHL con el sig num de guia xxxxxxxxxxxxx',
  sms_customer_reference_id: 'xxxxx' # opcional - un valor de referencia de hasta 128 caracteres, con el cual puedes consultar despues el estado actual de dicho mensaje de texto
}
```

Explanation:
- mobile_hub_id - This is the unique identifier from your device that needs to be activated, you can find this information once you access the details within the SMS devices main menu.
- sms_number - it is the international number, including the right international code plus the phone number including the local area code
- sms_type - there are two possible values for this field: standard_delivery and urgent_delivery, we give more priority to urgent delivery SMS, so if you need to ensure that this message is delivered as soon as possible just like a one time token, set the urgent_delivery type for that request.
- sms_content - it is the content message that has a limit of 160 characters, in the case you send a longer message, we will take only the first 160 characters from your request.
- sms_customer_reference_id - You can use this value to associate your messages to our system, so you can track and access in the future any specific text message details and it is optional.


Headers
````
Content-Type: application/json
Authorization-Token: Bearer ya29.ElqKBGN2Ri_Uz...HnS_uNreA
Authorization-Client: ya29.ElqKBGN2Ri_UzS_uNreA
```


#### How a Successful request looks like:
Status code
```
200
```

Response body
```
{
    "sms_customer_reference_id": "99999",
    "sms_content": "esta es una prueba",
    "mobile_hub_id": "6d5be464-xxxx-xxxx-xxxx-x0c7242c70d7",
    "api_version": "V2",
    "date_created": "2020-07-07T20:14:02Z",
    "status": "enqueued",
    "error_message": null,
    "sms_number": "+523121231517"
}
```


### Here are the possibles values you can get from a successful request:
- queued
- sending
- sent
- delivered
- receiving
- received


#### How a failed request looks like:
Status code
```
422
```

The "status" field will include one of the following values:
- failed
- undelivered

And the field
```
error_message
```

Will include one of the following responses:

- There are some validation errors: xxx
- The number of requests per minute was reached, please try again the next minute
- The number of requests per day was reached, please try again the next day
- The mobile_hub_id is invalid
- You account has been suspended, please contact our support team
- Your account has been blocked, please contact our support team

import { Link } from 'react-router-dom';


- queued
- sending
- sent
- delivered
- receiving
- received


- failed
- undelivered



rails g migration AddUpdateStatusFieldsToSmsNotifications additional_update_info status_updated_by_hub_at:datetime

si fallo este sera el status


Tipo request: PUT
URL: https://api.smsparatodos.com/v2/sms/update_status
Content-Type: app

body params:
```
{
  "sms_notification_uid": '54d57304-db0a-4575-b202-11d0d9071a8f',
  "status": "delivered",
  "additional_update_info": ''
}
```


Tipo request: POST -> https://{URL}/v1/sms_mobile_hubs/activate

HSBC
Razon social: DESARROLLADORA DE SISTEMAS TECNOLÓGICOS DE GUERRERO SA DE CV
Clabe: 021680040568831015
Cuenta: 4056883101

Scotiabank
Razón social: DESARROLLADORA DE SISTEMAS TECNOLÓGICOS DE GUERRERO SA DE CV
Clabe: 044680256012993704
Cuenta: 25601299370
Tarjeta: 5579225041365795


curl -X POST \
  https://api.smsparatodos.com/v2/sms/create \
  -H "Content-Type: application/json" \
  -H 'Authorization-Token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozfQ.S7-mMxhL76vwmDEHiBoC25b6OKWCGFfROZvUeaUHFoo' \
  -H 'Authorization-Client: $2a$12$Spip/ZntEXFlgcjlB3Y4Ge' \
  -d '{"sms_number":"+523121698456","sms_content":"Siguiente 1","sms_type":"standard_delivery","sms_customer_reference_id":"123456789","mobile_hub_id":"85ba8734-53e2-47d5-bf94-fa17eca32307"}'

curl -X POST \
  https://api.smsparatodos.com/v2/sms/create \
  -H "Content-Type: application/json" \
  -H 'Authorization-Token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozfQ.S7-mMxhL76vwmDEHiBoC25b6OKWCGFfROZvUeaUHFoo' \
  -H 'Authorization-Client: $2a$12$Spip/ZntEXFlgcjlB3Y4Ge' \
  -d '{"sms_number":"+523121698456","sms_content":"Siguiente 2","sms_type":"standard_delivery","sms_customer_reference_id":"123456789","mobile_hub_id":"85ba8734-53e2-47d5-bf94-fa17eca32307"}'

curl -X POST \
  https://api.smsparatodos.com/v2/sms/create \
  -H "Content-Type: application/json" \
  -H 'Authorization-Token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozfQ.S7-mMxhL76vwmDEHiBoC25b6OKWCGFfROZvUeaUHFoo' \
  -H 'Authorization-Client: $2a$12$Spip/ZntEXFlgcjlB3Y4Ge' \
  -d '{"sms_number":"+523121698456","sms_content":"numero valido","sms_type":"standard_delivery","sms_customer_reference_id":"123456789","mobile_hub_id":"85ba8734-53e2-47d5-bf94-fa17eca32307"}'


config.include Common::Helpers

result = count_queries_for do

  result = count_queries_for do
    process :index, method: :get, params: params
  end
  expect(result).to eq 7


print_queries_generated_for do
end


### Analisis acerca de envios y controles y mantenerlo simplle



About the control to not overload how many sms messages you send, well we need to confirm how many sms messages we support, and doing those experiments, then based on that we can say that:

- Sms notification with urgent delivery type will have more weight to be send

- I think the applications should control and enqueue messages when you already reached the limit, this way the clients do not need to worry about it.


30 messages per half hour is the suggestion unless you hack your system to send more than that. but I think we can control maybe 6 per minute


we woould need to enqueu all messages to let's say x number per minute and x number per half hour and the remaining ones we will enqueu them and in case that the sms notification is not send we will add a new logic to check every minute for old notification stuck

What happens when you decide to send a campaign to let's say 100 users so you send that using standar delivery, but then a user wants to register an account and you already overloaded the system, next time when checking will


Actually we do not care about sending a ton of them as we will try to resend them again as soon as we can, the only limit we can put in place is about 10 per minute = 500 sms per hour it is going to be the control and then all the remaining ones to be processed will be discarded, and whenever a sms message fails or it is not processed within 1 minute after it was send to firebase, we can enqueue it again if the status is firebase_sent so this way people will see the problem about the application sending too much notifications,


Maybe we can limit this to 10 minutes what about 100 sms per 10 minutes and the remaining ones will be discarded, but we


let's make this a bullet proof application.

First of all we will need to make sure that any failed sms notification is sent and retry it if it was not send correctly in less than 50 seconds so we can retry to send that message up to 3 times and we can save a variable there called

number_of_retries:integer

So this way we try 3 times and if the delivered_at: nil and sent_to_firebase is older than 50 seconds.

With this way, then we can play with so in case that the application is constantly showing the application is sending too many sms messages we can easily retry for the ones that were not delivered.


Another checker 5 minutes that creates a sms notification that will be send to our number and see if it was send, this in case that the device haven't send any notifications so we can check if in the last 5 minutes we didn't send any notification we can create a send one to check that the device is sending sms or in case that it has no data and a valid plan

What about Movistar that even though they do not show any alert the sms notifications are blocked after some time and it does not work properly.

In my case what happens if you receive a notifications saying that your device is not connected to internet or that it is not sending SMS messages, maybe because internet or beacuse the current plan is not valid.


plenty of logic to control my friend :(, let's begin with
- Movistar
- Telcel

the one that looks more flexible is Telcel so maybe we can recommend that one.

Let's say that Irvin fixes the problema and now the app always runs, so let's begin with what we need for Pacientes Web to work properly.

1.- No limit - Based on a configuration for devices maybe a new field
  a. - how_many_messages_per_minute: xxx - we can save this in a Redis cache that expires every week and also when we update that value we expire the key for that value if not set we can say that 10 is the default, this way I can set a big number
2.- Every minute I will enqueue again any messages that got stuck, for that we an implement as I mentioned above and the new field about `number_of_retries:integer`
3. I need to check every 20 seconds and we will send a message delivery but this one will include a special
```
sms_type: 'sms_device_checker_status'
```

This one won't send a SMS only will check the internet connection so whenever we got this sms_type we will make a new http request to a new endpoint called:
```
CREATE: v1/sms_mobile_hub_checks#create
{
  firebase_token: 'y.kwid./mkiek9k93kpjdeu9jf.d,d9(3d;.',
  sms_mobile_hub_token: 'xxxx-xxxx-xxxx-xxxxx'
}
```

So we can create this new model called
- Status can be online, offline
SmsMobileHubCheck firebase_token:text confirmed_status_at:datetime status:string





app_id = "1039167"
key = "74446a2bd87031fa62ea"
secret = "469e452f82ce46e4b8eb"
cluster = "us2"


require 'pusher'

pusher = Pusher::Client.new(
  app_id: '1039167',
  key: '74446a2bd87031fa62ea',
  secret: '469e452f82ce46e4b8eb',
  cluster: 'us2'
)

data = { "mobile_hub_id": "6d5be464-5f7d-4bfe-8592-90c7242c70d7", "sms_number": "+523121231517", "sms_type": "standard_delivery", "sms_customer_reference_id": "99999", "sms_content": "esta es una prueba" }


pusher.trigger('smsparatodos-channel', 'superdupperdevice', data)



curl -X POST \
  https://smsparatodosapi.ngrok.io/v2/sms/create \
  -H "Content-Type: application/json" \
  -H 'Authorization-Token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxM30.1KX29F-3h6gJYsnntAQH08NWlEAD91utxoMh8J_sfaw' \
  -H 'Authorization-Client: $2a$12$ZL6.AGqVM7QWZa80Olm/m.' \
  -d '{"sms_number":"+523121698456","sms_content":"otr mas","sms_type":"standard_delivery","sms_customer_reference_id":"123456789","mobile_hub_id":"477989dc-b431-4e95-856c-7b616aaffef8"}'


### Last updates, current work in progress
https://gist.github.com/heridev/7ebddd13d322877d3cad7f6ca8c2b805#work-in-progress


1. Irvin esta revisando eso de los updates para ver que esta pasando que siguen sin querer actualizarse.

2.
Terminar de habilitar el endpoint para mobile para de esta forma dejarlo solo para el mobile y será sin uso de tokens y asi
por que no se ocupa, entonces es mejor habilitarlo totalmente para ese, igual y revisas como la hiciste en invesmark para ver si quedo igual sin authenticacion de token mayormente o que onda y si evoluciona entonces despues te encargas de eso.
Before
https://gist.github.com/heridev/4401dbc6634a0282d9da5fcef8631068

After
https://gist.github.com/heridev/1762c399f280183d616a60cce8cba16b


a. De esa forma podemos ver que ya en el #validate no necesitamos enviar el firebase token y nos retornará de hecho el nuevo token del dispositivo que guardaremos en nuestro dispositiv
b. Tambien cuando enviemos un nuevo sms_notification necesitamos enviar el token custom y el firebase ya no aplica más y de esa forma en ese mismo update podemos ya hacer la implementacion del codigo pusher.com

3. Trabajar en los endpoint the sms mobile hub checks every 2 minutos y ademas implementa lo de los alarm manager y para ese entonces tambien pusher ya esta dandole duro y jalando al chingadazo.

4. Retomar lo de que puedas recibir el endpoint de #receive y viene en la libreta.


### Andrea cosas

### Payoneer
confirmado por conta - sáb., 27 jun. 14:46

Se facturaría en RIF con el RFC de público general del EXTRANJERO XEXX010101000 sin IVA, se puede facturar en DOLARES pero el sistema solicita el TIPO DE CAMBIO de la transacción o facturarlo en PESOS. Pásame las Fechas y montos depositados. saludos

### Cambio de titularidad - plataformas digitales
Se envió un correo al conta preguntando si podemos proceder con el cambio de titularidad

###


- Configurar pagina para que utilize https coneccion segura.

- Implementar metodos de pago por medio de:
 - Paypal (tarjeta de credito, debito y cuenta paypal)
 - Transferencia  (poner tus datos)
 - Mercadopago.
 - OpenPay

- Configurar google analytics

- Revisar intregacion con mienvio.mx

Despues de esto hacer una compra por la cantidad de $10.00 pesos

- Ver metodos de envío y calculo de los mismos en woomerce.


- Investigar un coste de envio base preguntar a la logistica y zonas o grupo de codigos postales

### Instalar el plugin woocommerce apg weight and postcode luego entra en ajustes del plugin
https://wordpress.org/plugins/woocommerce-apg-weight-and-postcodestatecountry-shipping/
Estos son algunas de las configuraciones que veras en dicho plugin.

- Coste de envio es la base a todos los envios
Digamos que son $100 como base para todos los envios.

tarifa de envio es para añadir costes basado en medidas y pesos por ejemplo
```
1000|50
3000|100
```

- Significa que un producto de hasta mil gramos tendrá un coste total de $150
- Significa que un producto de entre 1 kilo y 3 kilos tendrá un coste total de $200

Tener cuidado en la configuracion por producto para que no se haga el calculo individual, si no al total de la orden.


- En teoria puedes calcular envios basado en codigos postales entre rangos
- Puedes cobrar basado en pesos y medidas.
- Tambien se ofrece envio gratis despues de cierto precio


Si es más de $450 es GRATIS








